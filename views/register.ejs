<!-- Registration Form -->
<div class="container-fluid">
    <div class="row min-vh-100 align-items-center justify-content-center">
        <div class="col-lg-5 col-md-7">
            <div class="card card-glass border-0 shadow-lg">
                <div class="card-body p-5">
                    <!-- Header -->
                    <div class="text-center mb-4">
                        <div class="bg-primary rounded-circle d-inline-flex align-items-center justify-content-center mb-3" 
                             style="width: 80px; height: 80px;">
                            <i class="fas fa-user-plus text-white fs-2"></i>
                        </div>
                        <h2 class="fw-bold text-white mb-2">Create Account</h2>
                        <p class="text-white-50">Join SecureBank and experience next-generation banking</p>
                    </div>

                    <!-- Registration Form -->
                    <form id="registrationForm">
                        <!-- Username -->
                        <div class="mb-3">
                            <label for="username" class="form-label text-white fw-semibold">
                                <i class="fas fa-user me-2"></i>Username
                            </label>
                            <input type="text" class="form-control form-control-lg" id="username" name="username" 
                                   placeholder="Enter your username" required minlength="3" maxlength="50">
                            <div class="invalid-feedback"></div>
                            <small class="form-text text-white-50">3-50 characters, letters, numbers, and underscores only</small>
                        </div>

                        <!-- Email -->
                        <div class="mb-3">
                            <label for="email" class="form-label text-white fw-semibold">
                                <i class="fas fa-envelope me-2"></i>Email Address
                            </label>
                            <input type="email" class="form-control form-control-lg" id="email" name="email" 
                                   placeholder="Enter your email address" required>
                            <div class="invalid-feedback"></div>
                            <small class="form-text text-white-50">We'll use this for account verification and updates</small>
                        </div>

                        <!-- First Name -->
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="firstName" class="form-label text-white fw-semibold">
                                    <i class="fas fa-user-tag me-2"></i>First Name
                                </label>
                                <input type="text" class="form-control form-control-lg" id="firstName" name="firstName" 
                                       placeholder="First name" required maxlength="50">
                                <div class="invalid-feedback"></div>
                            </div>
                            <div class="col-md-6">
                                <label for="lastName" class="form-label text-white fw-semibold">
                                    <i class="fas fa-user-tag me-2"></i>Last Name
                                </label>
                                <input type="text" class="form-control form-control-lg" id="lastName" name="lastName" 
                                       placeholder="Last name" required maxlength="50">
                                <div class="invalid-feedback"></div>
                            </div>
                        </div>

                        <!-- Phone Number -->
                        <div class="mb-3">
                            <label for="phoneNumber" class="form-label text-white fw-semibold">
                                <i class="fas fa-phone me-2"></i>Phone Number
                            </label>
                            <input type="tel" class="form-control form-control-lg" id="phoneNumber" name="phoneNumber" 
                                   placeholder="Enter your phone number" required>
                            <div class="invalid-feedback"></div>
                            <small class="form-text text-white-50">Used for SMS verification and security alerts</small>
                        </div>

                        <!-- Password -->
                        <div class="mb-3">
                            <label for="password" class="form-label text-white fw-semibold">
                                <i class="fas fa-lock me-2"></i>Password
                            </label>
                            <div class="input-group">
                                <input type="password" class="form-control form-control-lg" id="password" name="password" 
                                       placeholder="Enter your password" required minlength="8">
                                <button class="btn btn-outline-light" type="button" id="togglePassword">
                                    <i class="fas fa-eye"></i>
                                </button>
                            </div>
                            <div class="invalid-feedback"></div>
                            <small class="form-text text-white-50">Min 8 characters with uppercase, lowercase, number & special character</small>
                        </div>

                        <!-- Confirm Password -->
                        <div class="mb-4">
                            <label for="confirmPassword" class="form-label text-white fw-semibold">
                                <i class="fas fa-lock me-2"></i>Confirm Password
                            </label>
                            <input type="password" class="form-control form-control-lg" id="confirmPassword" name="confirmPassword" 
                                   placeholder="Confirm your password" required>
                            <div class="invalid-feedback"></div>
                        </div>

                        <!-- Terms and Conditions -->
                        <div class="mb-4">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="agreeTerms" required>
                                <label class="form-check-label text-white-50" for="agreeTerms">
                                    I agree to the <a href="#" class="text-info">Terms of Service</a> and 
                                    <a href="#" class="text-info">Privacy Policy</a>
                                </label>
                                <div class="invalid-feedback"></div>
                            </div>
                        </div>

                        <!-- Submit Button -->
                        <div class="d-grid mb-4">
                            <button type="submit" class="btn btn-gradient btn-lg" id="submitBtn">
                                <span class="btn-text">
                                    <i class="fas fa-user-plus me-2"></i>
                                    Create Account
                                </span>
                                <span class="btn-spinner d-none">
                                    <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                                    Creating Account...
                                </span>
                            </button>
                        </div>

                        <!-- Alert for messages -->
                        <div id="alertContainer"></div>
                    </form>

                    <!-- Footer -->
                    <div class="text-center">
                        <p class="text-white-50 mb-0">
                            Already have an account? 
                            <a href="/login" class="text-info fw-semibold">Sign In</a>
                        </p>
                    </div>

                    <!-- Security Features -->
                    <div class="row mt-4 pt-4 border-top border-light border-opacity-25">
                        <div class="col-4 text-center">
                            <i class="fas fa-shield-check text-success fs-5 mb-2"></i>
                            <div class="small text-white-50">Encrypted</div>
                        </div>
                        <div class="col-4 text-center">
                            <i class="fas fa-lock text-warning fs-5 mb-2"></i>
                            <div class="small text-white-50">Secure</div>
                        </div>
                        <div class="col-4 text-center">
                            <i class="fas fa-certificate text-info fs-5 mb-2"></i>
                            <div class="small text-white-50">FDIC Insured</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- JavaScript for form handling -->
<script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('registrationForm');
    const submitBtn = document.getElementById('submitBtn');
    const btnText = submitBtn.querySelector('.btn-text');
    const btnSpinner = submitBtn.querySelector('.btn-spinner');
    const alertContainer = document.getElementById('alertContainer');
    const togglePassword = document.getElementById('togglePassword');
    const passwordInput = document.getElementById('password');

    // Toggle password visibility
    togglePassword.addEventListener('click', function() {
        const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
        passwordInput.setAttribute('type', type);
        
        const icon = this.querySelector('i');
        icon.classList.toggle('fa-eye');
        icon.classList.toggle('fa-eye-slash');
    });

    // Real-time password validation
    passwordInput.addEventListener('input', function() {
        validatePassword(this.value);
    });

    // Confirm password validation
    document.getElementById('confirmPassword').addEventListener('input', function() {
        validatePasswordMatch();
    });

    // Username validation
    document.getElementById('username').addEventListener('input', function() {
        validateUsername(this.value);
    });

    // Email validation
    document.getElementById('email').addEventListener('input', function() {
        validateEmail(this.value);
    });

    // Phone number validation
    document.getElementById('phoneNumber').addEventListener('input', function() {
        validatePhoneNumber(this.value);
    });

    // First name validation
    document.getElementById('firstName').addEventListener('input', function() {
        const value = this.value;
        if (value.length > 0 && value.length <= 50) {
            setFieldValid('firstName');
        } else if (value.length === 0) {
            setFieldError('firstName', 'First name is required');
        } else {
            setFieldError('firstName', 'First name must be 1-50 characters');
        }
    });

    // Last name validation
    document.getElementById('lastName').addEventListener('input', function() {
        const value = this.value;
        if (value.length > 0 && value.length <= 50) {
            setFieldValid('lastName');
        } else if (value.length === 0) {
            setFieldError('lastName', 'Last name is required');
        } else {
            setFieldError('lastName', 'Last name must be 1-50 characters');
        }
    });

    // Form submission
    form.addEventListener('submit', async function(e) {
        e.preventDefault();

        // Clear previous alerts
        alertContainer.innerHTML = '';

        // Validate form
        if (!validateForm()) {
            return;
        }

        // Show loading state
        btnText.classList.add('d-none');
        btnSpinner.classList.remove('d-none');
        submitBtn.disabled = true;

        try {
            const formData = new FormData(form);
            const userData = {
                username: formData.get('username'),
                email: formData.get('email'),
                firstName: formData.get('firstName'),
                lastName: formData.get('lastName'),
                phoneNumber: formData.get('phoneNumber'),
                password: formData.get('password')
            };

            const response = await fetch('/api/auth/register', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(userData)
            });

            const result = await response.json();

            if (response.ok) {
                showAlert('success', 'Account created successfully! Redirecting to login...');
                setTimeout(() => {
                    window.location.href = '/login';
                }, 2000);
            } else {
                showAlert('danger', result.message || 'Registration failed. Please try again.');
            }
        } catch (error) {
            console.error('Registration error:', error);
            showAlert('danger', 'Network error. Please check your connection and try again.');
        } finally {
            // Reset button state
            btnText.classList.remove('d-none');
            btnSpinner.classList.add('d-none');
            submitBtn.disabled = false;
        }
    });

    function validateForm() {
        let isValid = true;

        // Validate username
        const username = document.getElementById('username').value;
        if (!validateUsername(username)) isValid = false;

        // Validate email
        const email = document.getElementById('email').value;
        if (!validateEmail(email)) isValid = false;

        // Validate first name
        const firstName = document.getElementById('firstName').value;
        if (firstName.length < 1 || firstName.length > 50) {
            setFieldError('firstName', 'First name is required (1-50 characters)');
            isValid = false;
        } else {
            setFieldValid('firstName');
        }

        // Validate last name
        const lastName = document.getElementById('lastName').value;
        if (lastName.length < 1 || lastName.length > 50) {
            setFieldError('lastName', 'Last name is required (1-50 characters)');
            isValid = false;
        } else {
            setFieldValid('lastName');
        }

        // Validate phone number
        const phoneNumber = document.getElementById('phoneNumber').value;
        if (!validatePhoneNumber(phoneNumber)) isValid = false;

        // Validate password
        const password = document.getElementById('password').value;
        if (!validatePassword(password)) isValid = false;

        // Validate password match
        if (!validatePasswordMatch()) isValid = false;

        // Validate terms
        const agreeTerms = document.getElementById('agreeTerms').checked;
        if (!agreeTerms) {
            setFieldError('agreeTerms', 'You must agree to the terms and conditions');
            isValid = false;
        } else {
            setFieldValid('agreeTerms');
        }

        return isValid;
    }

    function validateUsername(username) {
        const usernameRegex = /^[a-zA-Z0-9_]+$/;
        
        if (username.length < 3) {
            setFieldError('username', 'Username must be at least 3 characters');
            return false;
        } else if (username.length > 50) {
            setFieldError('username', 'Username must be less than 50 characters');
            return false;
        } else if (!usernameRegex.test(username)) {
            setFieldError('username', 'Username can only contain letters, numbers, and underscores');
            return false;
        } else {
            setFieldValid('username');
            return true;
        }
    }

    function validateEmail(email) {
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        
        if (!email) {
            setFieldError('email', 'Email is required');
            return false;
        } else if (!emailRegex.test(email)) {
            setFieldError('email', 'Please enter a valid email address');
            return false;
        } else {
            setFieldValid('email');
            return true;
        }
    }

    function validatePhoneNumber(phoneNumber) {
        const phoneRegex = /^\+?[\d\s\-\(\)]+$/;
        
        if (!phoneNumber) {
            setFieldError('phoneNumber', 'Phone number is required');
            return false;
        } else if (!phoneRegex.test(phoneNumber)) {
            setFieldError('phoneNumber', 'Please enter a valid phone number');
            return false;
        } else if (phoneNumber.replace(/\D/g, '').length < 10) {
            setFieldError('phoneNumber', 'Phone number must have at least 10 digits');
            return false;
        } else {
            setFieldValid('phoneNumber');
            return true;
        }
    }

    function validatePassword(password) {
        const hasUpper = /[A-Z]/.test(password);
        const hasLower = /[a-z]/.test(password);
        const hasNumber = /\d/.test(password);
        const hasSpecial = /[!@#$%^&*(),.?":{}|<>]/.test(password);

        if (password.length < 8) {
            setFieldError('password', 'Password must be at least 8 characters');
            return false;
        } else if (!hasUpper || !hasLower || !hasNumber || !hasSpecial) {
            setFieldError('password', 'Password must contain uppercase, lowercase, number, and special character');
            return false;
        } else {
            setFieldValid('password');
            return true;
        }
    }

    function validatePasswordMatch() {
        const password = document.getElementById('password').value;
        const confirmPassword = document.getElementById('confirmPassword').value;

        if (password !== confirmPassword) {
            setFieldError('confirmPassword', 'Passwords do not match');
            return false;
        } else if (confirmPassword) {
            setFieldValid('confirmPassword');
            return true;
        }
        return true;
    }

    function setFieldError(fieldId, message) {
        const field = document.getElementById(fieldId);
        field.classList.add('is-invalid');
        field.classList.remove('is-valid');
        
        const feedback = field.parentNode.querySelector('.invalid-feedback');
        if (feedback) {
            feedback.textContent = message;
        }
    }

    function setFieldValid(fieldId) {
        const field = document.getElementById(fieldId);
        field.classList.add('is-valid');
        field.classList.remove('is-invalid');
    }

    function showAlert(type, message) {
        const alertHtml = `
            <div class="alert alert-${type} alert-dismissible fade show" role="alert">
                <i class="fas fa-${type === 'success' ? 'check-circle' : 'exclamation-triangle'} me-2"></i>
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        `;
        alertContainer.innerHTML = alertHtml;
    }
});
</script>
